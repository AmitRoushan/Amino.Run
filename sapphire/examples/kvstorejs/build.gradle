apply plugin: 'java-library'

dependencies {
    compile project(':sapphire-core')
}

// Task for app stub generation
genStubs {
    main = "sapphire.compiler.GraalStubGenerator"
    classpath +=  files("$projectDir/../../sapphire-core/build/libs/sapphire-core-1.0.0.jar")

    def sapphireObjectPath = "$projectDir/src/main/js/sapphire/appdemo/KeyValueStore.js"
    def outPath = "$projectDir/src/main/java"
    def packageName = "sapphire.appdemo.stubs"
    def sapphireClasses = "KeyValueStore"
    args sapphireObjectPath, outPath, packageName, sapphireClasses
    outputs.dir outPath // Declare outputs, so gradle will run if they have been changed
    inputs.dir sapphireObjectPath   // Declare inputs, so gradle will run if they have been changed
}

clean {
    delete genStubs.outputs // Add generated stubs to what the clean task must delete
}

jar.dependsOn compileStubs

// task for run javascript kvstore client
task runjsapp(type: Exec) {
    environment  OMS_IP: "${project.property('omsIp')}"
    environment  OMS_PORT: "${project.property('omsPort')}"
    environment  HOST_IP: "${project.property('embeddedKernelServerIp')}"
    environment  HOST_PORT: "${project.property('kernelServerPort')}"
    def classpath = sourceSets.main.runtimeClasspath.asPath

    //executable "/home/paas/graalvm-ce-1.0.0-rc6/bin/js"
    executable "$System.env.JAVA_HOME/bin/js"
    args "--jvm", "--polyglot", "--jvm.classpath=${classpath}",
            "${project.projectDir}/src/main/js/sapphire/appdemo/KeyValueStoreClient.js"
}